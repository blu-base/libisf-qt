
2009-08-06 (Valerio)
 * Added Metrics recognization and saving.
 * Made sense into the property tags: they're now all in the PacketProperty enum.
 * Added MultiByteCoding utility methods to find out the encoded size of a value.
 * Changed the installed include files directory to PREFIX/include/isf-qt .
 * Added a NOTES file with possibly useful stuff.
 * Added metrics measurement units, found on MSDN.
 * Added a couple more checks on data.
 * Moved include isfdrawing.h to isfqtdrawing.h .
 * Fixed CMake installing bug and added C++ style includes, <IsfQt> and <IsfQtDrawing>.
 * Fixed name of the drawing-to-isf converting method.
 * Fixed crash when given an invalid drawing address.

2009-08-05 (Valerio)
 * Extended Adam's last fix to the other main drawing properties.
 * Added maximum stroke pen size value.
 * Added stroke and drawing bounding box values.
 * Added adjusting the drawing's bounding box to include thick strokes.
 * Enabled transformations.
 * Fixed transform data order, it was inverted for scale+translate transforms.
 * Fixed destination QPixmap's size, it's now fit for the drawing.
 * Completed CMake rules, now the library can be installed on the system and
   other projects can find it.
 * Improved debugging rules, now debug mode is controlled (again) from CMake
   and verbose output is configurable.
 * Fixed the documentation to reflect the name change "libisf" to "isf-qt",
   and updated it.
 * Added updated KDevelop3/4 project files.
 * Changed the library structure:
   - separated the public interface includes into the /include/ dir
   - moved all internally used inclusions and data structures into
     /src/isfqt-internal.h
   - reorganized the internal files structure
   - renamed class Tags to TagsParser as there will be a TagWriter (made up name)
   - Renamed the IsfData class to DataSource as it is at a lower level than ISF.
   - Moved the ISF parser into a class Parser, found in include/isfqt.h and src/isfqt.cpp
 * Added a dummy drawing-to-ISF method in class Parser.
 * Added multibyte encoding methods taking a DataSource.
 * Added float encoding method and fixed uint encoding method.
 * Fixed seeking bug in DataSource::append() methods.
 * Added DataSource::prepend() methods.
 * Started working on the ISF stream writer.

2009-08-05 (Adam)
 * Correct an issue with incorrect colours for strokes.

2009-08-04 (Adam)
 * Re-save test ISF data with official Microsoft Ink classes.
 * Add functions to convert between HiMetric units and pixels.
 * Antialiasing whilst drawing ISF to QPixmap.
 * Fix the drawing of ISF data to QPixmap: draw the lines correctly between points.

2009-08-04 (Valerio)
 * Fixed endianness problems when retrieving datastream bits with IsfData.
 * Added a new parameter to IsfData::atEnd() to check if the buffer was all used,
   including the current byte's bits.
 * Changed IsfData::seekByteBack() with seekRelative(), which makes more sense.
 * Added IsfData::skipToNextByte() to discard the current byte's bits and move on
   to the next byte.
 * Added Isf::Drawing method getPixmap() to convert a drawing to a QPixmap. Quite raw
   at the moment, but still.
 * Moved actual tag parsing into Isf::Drawing::parseTag().
 * Added a whole lot of tags to Isf::Tags. Now the parser is able to recognize the most
   useful tags (and mostly make use of their data).
 * Added a GUID mapping from the ISF specs, I doubt it'll ever be used though.
 * Added float decoding method to multibytecoding.cpp.
 * Added new test ISF files - more complex - and sorted all test ISF files by complexity.
 * Added new test application "test_decode", which displays a parsed ISF file.
 * Added pressure data recognization.
 * Added stroke description blocks recognization.
 * Fixed stroke payload parsing appearing when not needed (and wasting bytes).
 * Added a set of data structures to hold metrics and to better contain stroke attributes.
 * Reorganized the code of the Tags namespace, it's now a class with all static members;
   this simplifies quite a bit the passing of data between that and IsfDrawing.
 * Fixed bug in the GUID Table tag parser.
 * Added more compiler flags (and warnings) to ease debugging.
 * Added the infrastructure to link metrics and transforms data to the strokes.
 * Finally linked the drawing attributes and stroke info to the strokes' data:
   libisf-qt is now correctly decoding all tests (except test 6).
 * Fixed all compiler warnings and improved the debugging output.
 * Fixed point rendering didn't work when points are made by a line from a point
   to the same point.
 * Fixed broken main parser loop, continued forever.

2009-07-30 (Valerio)
 * Added IsfData class to read and write bit-by-bit an array of bytes.
 * Changed all the code to use it instead of plain QByteArrays.
 * Completed huffman decompression support.
 * Added algorithm data to help writing gorilla decompression.
 * Added tests for the IsfData class.
 * Added tag recognization.
 * Fixed some IsfData bugs.
 * Changed default CMake build type to debugfull.
 * Completed Gorilla decompression support.
 * Started tag parsing work, made basic analysis methods.
 * Made the ParserError enum (now IsfError) the library's error enumeration system.
 * Continued a bit the tag parsing work, added a couple tags and another testfile.

2009-07-08 (Adam)
 * Make decode(UInt|Int) take a reference as a position parameter. This
   reference is then incremented as the integer is decoded.
 * Re-work tests for IsfDrawing.
 * Create IsfDrawing::fromIsfData() static method to create a new IsfDrawing
   instance from a QByteArray containing ISF data.
 * Begin state matchine for ISF parser.
 * Add appropriate unit tests for ISF parser.
 * Added TODO file for libisf to keep track of things.

2009-06-30 (Adam)
 * Parse ISF version number properly; add unit tests for it.
 * Fix CMakeLists.txt to build with debug info by default
 * Moved format/types.(cpp|h) into the multibytecoding.(cpp|h) classes.
   Also moved these into libisf/ and deleted format/ directory.
 * Added Isf::encodeInt to encode a signed integer into multibyte format
 * Added test cases for the encode/decode functions.
 * Re-add libisf.h
 * Fix wrong e-mail addresses in copyright info.
 * Created a unit test framework for libisf-qt; run using make test
 * Created IsfDrawing class which will represent an ISF drawing.
 * Added some rudimentary unit tests for IsfDrawing
