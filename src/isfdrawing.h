/***************************************************************************
 *   Copyright (C) 2009 by Adam Goossens                                   *
 *   adam@kmess.org                                                        *
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU Lesser General Public License as        *
 *   published by the Free Software Foundation; either version 2.1 of the  *
 *   License, or (at your option) any later version.                       *
 *                                                                         *
 *   This program is distributed in the hope that it will be useful,       *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
 *   GNU General Public License for more details.                          *
 *                                                                         *
 *   You should have received a copy of the GNU Lesser General Public      *
 *   License along with this program; if not, write to the                 *
 *   Free Software Foundation, Inc.,                                       *
 *   59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *
 ***************************************************************************/

#ifndef ISFDRAWING_H
#define ISFDRAWING_H


// Forward declarations
class QByteArray;



namespace Isf
{



  /**
   * A list of all known ISF tag indexes into the GUID
   * table
   */
  enum Tags
  {
    TAG_INK_SPACE_RECT                  = 0
  , TAG_GUID_TABLE
  , TAG_DRAW_ATTRS_TABLE
  , TAG_DRAW_ATTRS_BLOCK
  , TAG_STROKE_DESC_TABLE
  , TAG_STROKE_DESC_BLOCK
  , TAG_BUTTONS
  , TAG_NO_X
  , TAG_NO_Y
  , TAG_DIDX
  , TAG_STROKE
  , TAG_STROKE_PROPERTY_LIST
  , TAG_POINT_PROPERTY
  , TAG_SIDX
  , TAG_COMPRESSION_HEADER
  , TAG_TRANSFORM_TABLE
  , TAG_TRANSFORM
  , TAG_TRANSFORM_ISOTROPIC_SCALE
  , TAG_TRANSFORM_ANISOTROPIC_SCALE
  , TAG_TRANSFORM_ROTATE
  , TAG_TRANSFORM_TRANSLATE
  , TAG_TRANSFORM_SCALE_AND_TRANSLATE
  , TAG_TRANSFORM_QUAD
  , TAG_TIDX
  , TAG_METRIC_TABLE
  , TAG_METRIC_BLOCK
  , TAG_MIDX
  , TAG_MANTISSA
  , TAG_PERSISTENT_FORMAT
  , TAG_HIMETRIC_SIZE
  , TAG_STROKE_IDS
  };

  /**
   * Possible errors generated by the ISF parser
   */
  enum ParserError
  {
    ISF_ERROR_NONE = 0           /// no error
  , ISF_ERROR_BAD_VERSION        /// incompatible ISF version
  , ISF_ERROR_BAD_STREAMSIZE     /// stream size of ISF data is too small
  };

  /**
   * ISF parser state machine states
   */
  enum ParserState
  {
    ISF_PARSER_START = 0,        /// The parser has not read anything from the data yet
    ISF_PARSER_FINISH,           /// The parser is done
    ISF_PARSER_STREAMSIZE,       /// The parser is reading the ISF stream size
    ISF_PARSER_TAG               /// The parser is reading tags from the stream
  };



  /**
   * This class loads ISF (Ink Serialized Format) drawings.
   *
   * @author Adam Goossens (adam@kmess.org)
   */
  class Drawing
  {

    public:

      /// Supported ISF version number
      static const unsigned short SUPPORTED_ISF_VERSION = 0;

    public:

      /// Constructor
      Drawing();


    public: // Public static methods

      /// Return whether this is a null Drawing
      bool                 isNull() const;
      /// Return the last parser error
      ParserError          parserError() const;


    public: // Public static methods

      /// builds an ISF drawing object from raw ISF data.
      static Drawing       fromIsfData( const QByteArray &rawData );


    private: // Private properties

      // Whether the drawing is invalid or valid
      bool                 isNull_;
      // Parser error (if there is one)
      ParserError          parserError_;

  };



}



#endif // ISFDRAWING_H
